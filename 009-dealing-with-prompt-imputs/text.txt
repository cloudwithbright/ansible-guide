To start this handson lab,you need following resources.


*******************************************************************************************************************
prerequisites

1.	server.cnl.com – 1 CPU – 1GB RAM (Python 2.7) - Ansible Server
2.	node1.cnl.com – 1 CPU – 1GB RAM ( python 2.6 and above) - Ansible Client 1
3.	node2.cnl.com – 1 CPU – 1GB RAM ( python 2.6 and above) - Ansible Client 2

from ansible server login as an ansible user as per class 4.From ansible user execute below command

ansible all -m ping

this above ping command should return with ping / pong green color.

*******************************************************************************************************************
Input will be visible as an open text

---
- hosts: all
  vars_prompt:
    - name: username
      prompt: What is your username?
      private: no
  tasks:
    - name: Print a message
      debug:
        msg: 'Logging in as {{ username }}'
		

*******************************************************************

Input wont be visible as an open text

---
- hosts: all
  vars_prompt:

    - name: username
      prompt: What is your username?
      private: yes
  tasks:
    - name: Print a message
      debug:
        msg: 'Logging in as {{ username }}'
		
		
******************************************************************************************************************
Encrypting values supplied by vars_prompt

You can encrypt the entered value so you can use it, for instance, with the user module to define a password:

vars_prompt:
  - name: my_password2
    prompt: Enter password2
    private: yes
    encrypt: sha512_crypt
    confirm: yes
    salt_size: 7

---
- name: encrypting the values
  hosts: all
  vars_prompt:
    - name: username
      prompt: What is your username?
      private: no
    - name: my_password2
      prompt: Enter password2
      private: yes
      encrypt: sha512_crypt
      confirm: yes
      salt_size: 7
  tasks:
    - name: Print a message
      debug:
        msg: 'Logging in as {{ username }}'
	- name: Print a message
      debug:
        msg: 'Logging in as {{ my_password2 }}'

If you have Passlib installed, you can use any crypt scheme the library supports:

yum list python2-passlib


des_crypt - DES Crypt
bsdi_crypt - BSDi Crypt
bigcrypt - BigCrypt
crypt16 - Crypt16
md5_crypt - MD5 Crypt
bcrypt - BCrypt
sha1_crypt - SHA-1 Crypt
sun_md5_crypt - Sun MD5 Crypt
sha256_crypt - SHA-256 Crypt
sha512_crypt - SHA-512 Crypt
apr_md5_crypt - Apache’s MD5-Crypt variant
phpass - PHPass’ Portable Hash
pbkdf2_digest - Generic PBKDF2 Hashes
cta_pbkdf2_sha1 - Cryptacular’s PBKDF2 hash
dlitz_pbkdf2_sha1 - Dwayne Litzenberger’s PBKDF2 hash
scram - SCRAM Hash
bsd_nthash - FreeBSD’s MCF-compatible nthash encoding

The only parameters accepted are ‘salt’ or ‘salt_size’. You can use your own salt by defining ‘salt’, or have one generated automatically using ‘salt_size’. By default Ansible generates a salt of size 8.

New in version 2.7.

If you do not have Passlib installed, Ansible uses the crypt library as a fallback. Ansible supports at most four crypt schemes, depending on your platform at most the following crypt schemes are supported:

bcrypt - BCrypt
md5_crypt - MD5 Crypt
sha256_crypt - SHA-256 Crypt
sha512_crypt - SHA-512 Crypt



******************************************************************************************************************
New in version 2.8.

Allowing special characters in vars_prompt values

Some special characters, such as { and % can create templating errors. If you need to accept special characters, use the unsafe option:

vars_prompt:
  - name: my_password_with_weird_chars
    prompt: Enter password
    unsafe: yes
    private: yes
	

---
- name: enter user details
  hosts: all
  vars_prompt:
    - name: username
      prompt: What is your username?
      private: no
    - name: my_password2
      prompt: Enter password
      unsafe: yes
      private: yes
  tasks:
    - name: Print a message
      debug:
        msg: 'Logging in as {{ username }}'
	- name: Print a message
      debug:
        msg: 'Logging in as {{ my_password2 }}'
		

******************************************************************************************************************

---
- name: enter website details
  hosts: all
  connection: local
  vars_prompt:
 
    - name: website
      prompt: "What is your website?"
      private: no
 
    - name: country
      prompt: "Enter Country Name?"
      private: no
 
  tasks:
 
    - debug:
        msg: 'Website name: {{ website }}. Country name: {{ country }}'